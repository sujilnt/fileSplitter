name:spkAhuOnAndUnoccupied
func
ruleReady
src:
  /*
    AHU is on and site is unoccupied.
  
    Params:
    - on: rec with `fan and cmd` tags
    - dates: any valid `hisRead` date range
    - threshold: number of hours AHU must be on outside
        of occupied time before we consider generating a spark
  
    Returns:
      - spark periods
  */
  
  
  (thePoints, dates, threshold: 0h) => do
  
    // get periods when lights are on
    on: hisRead(thePoints, dates).hisFindPeriods(v => v == 1)
  
    // get unoccupied periods
    unoccupied: toOccupied(thePoints).hisRead(dates).hisFindPeriods(v => not v)
     
    // compute intersection and filter out periods under threshold
    faults: hisPeriodIntersection([on, unoccupied]).hisFindAll(p => p != na() and p > threshold)
  
  
  end

---